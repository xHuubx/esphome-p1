substitutions:
  device_name: waterlezer
  device_description: Water meter sensor 
  version: "v22.02.1"

esphome:
  name: ${device_name}
  comment: "${device_description}" 
  name_add_mac_suffix: false
  
  project:
    name: smartstuff.waterlezer
    version: ${version}
  
esp8266:
  board: esp12e
  restore_from_flash: true

status_led:
  pin:
    number: 2
    inverted: true

dashboard_import:
  package_import_url: github://mhendriks/esphome-p1/waterlezer.yaml

wifi:
#  ssid: !secret ssid
#  password: !secret password  
  ap:
    ssid: ${device_name}

web_server:
  port: 80
  
captive_portal:

logger:
  level: INFO

ota:
  reboot_timeout: 10min
  num_attempts: 5

api:
#via Home Assistant Ontwikkelhulpmiddelen > services zoeken op esphome.watermeter_set_water_reading en via deze methode de juiste beginstand invoeren
  services:
    - service: set_water_reading
      variables:
        meter_value: int
      then:
        - globals.set:
            id: totalWaterUsage
            value: !lambda "return ( meter_value );"

globals:
  - id: totalWaterUsage
    type: int
    restore_value: true      # aanpassen naar no indien de nieuwe waarde onder de oude ligt
    initial_value: '0'       # beginstand van je watermeter -> aanpassen via Home Assistant services

button:  
  - platform: restart
    name: "Restart device"
    
sensor:
  - platform: pulse_counter
    pin: 
      number: 5
      mode:
        input: true
        pullup: true #v3.5 aanzetten
    id: watermeter_pulse
    name: "Watermeter pulse"
    count_mode:
      rising_edge: DISABLE
      falling_edge: INCREMENT
    state_class: measurement
    update_interval: 1s
    internal_filter: 100us
    accuracy_decimals: 0
    unit_of_measurement: 'L/min'
  
  - platform: template
    name: "Watermeter total"
    state_class: "total_increasing"
    icon: mdi:water
    update_interval: 1s
    unit_of_measurement: L
    accuracy_decimals: 0
    lambda: |-
      if (id(watermeter_pulse).state > 0) id(totalWaterUsage) += 1;
      return id(totalWaterUsage);

  - platform: uptime
    name: "Uptime"

text_sensor:
  - platform: wifi_info
    ip_address:
      name: IP-adres
      icon: mdi:ip-network
    ssid:
      name: Netwerk
      icon: mdi:access-point-network
    mac_address:
      name: Mac-adres
      icon: mdi:folder-key-network-outline
      
  - platform: template
    name: "version"
    icon: "mdi:label-outline"
    update_interval: 6h
    lambda: return {"${version}"};
      
  - platform: version
    name: "ESPHome Version"
    hide_timestamp: true

